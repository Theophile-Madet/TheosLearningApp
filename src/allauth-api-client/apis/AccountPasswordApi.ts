/* tslint:disable */
/* eslint-disable */
/**
 * django-allauth: Headless API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: info@allauth.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
	AllauthClientV1AccountPasswordChangePostRequest,
	AuthenticationResponse,
	ErrorResponse
} from '../models/index';
import {
	AllauthClientV1AccountPasswordChangePostRequestFromJSON,
	AllauthClientV1AccountPasswordChangePostRequestToJSON,
	AuthenticationResponseFromJSON,
	AuthenticationResponseToJSON,
	ErrorResponseFromJSON,
	ErrorResponseToJSON
} from '../models/index';

export interface AllauthClientV1AccountPasswordChangePostOperationRequest {
	client: AllauthClientV1AccountPasswordChangePostClientEnum;
	xSessionToken?: string;
	allauthClientV1AccountPasswordChangePostRequest?: AllauthClientV1AccountPasswordChangePostRequest;
}

/**
 *
 */
export class AccountPasswordApi extends runtime.BaseAPI {

	/**
	 * In order to change the password of an account, the current and new password must be provider.  However, accounts that were created by signing up using a third-party provider do not have a password set. In that case, the current password is not required.
	 * Change password
	 */
	async allauthClientV1AccountPasswordChangePostRaw(requestParameters: AllauthClientV1AccountPasswordChangePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
		if (requestParameters['client'] == null) {
			throw new runtime.RequiredError(
				'client',
				'Required parameter "client" was null or undefined when calling allauthClientV1AccountPasswordChangePost().'
			);
		}

		const queryParameters: any = {};

		const headerParameters: runtime.HTTPHeaders = {};

		headerParameters['Content-Type'] = 'application/json';

		if (requestParameters['xSessionToken'] != null) {
			headerParameters['X-Session-Token'] = String(requestParameters['xSessionToken']);
		}

		const response = await this.request({
			path: `/_allauth/{client}/v1/account/password/change`.replace(`{${'client'}}`, encodeURIComponent(String(requestParameters['client']))),
			method: 'POST',
			headers: headerParameters,
			query: queryParameters,
			body: AllauthClientV1AccountPasswordChangePostRequestToJSON(requestParameters['allauthClientV1AccountPasswordChangePostRequest'])
		}, initOverrides);

		return new runtime.VoidApiResponse(response);
	}

	/**
	 * In order to change the password of an account, the current and new password must be provider.  However, accounts that were created by signing up using a third-party provider do not have a password set. In that case, the current password is not required.
	 * Change password
	 */
	async allauthClientV1AccountPasswordChangePost(requestParameters: AllauthClientV1AccountPasswordChangePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
		await this.allauthClientV1AccountPasswordChangePostRaw(requestParameters, initOverrides);
	}

}

/**
 * @export
 */
export const AllauthClientV1AccountPasswordChangePostOperationClientEnum = {
	App: 'app',
	Browser: 'browser'
} as const;
export type AllauthClientV1AccountPasswordChangePostOperationClientEnum = typeof AllauthClientV1AccountPasswordChangePostOperationClientEnum[keyof typeof AllauthClientV1AccountPasswordChangePostOperationClientEnum];
