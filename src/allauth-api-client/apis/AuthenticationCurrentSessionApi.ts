/* tslint:disable */
/* eslint-disable */
/**
 * django-allauth: Headless API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: info@allauth.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
	AuthenticatedResponse,
	AuthenticationResponse,
	SessionGoneResponse
} from '../models/index';
import {
	AuthenticatedResponseFromJSON,
	AuthenticatedResponseToJSON,
	AuthenticationResponseFromJSON,
	AuthenticationResponseToJSON,
	SessionGoneResponseFromJSON,
	SessionGoneResponseToJSON
} from '../models/index';

export interface AllauthClientV1AuthSessionDeleteRequest {
	client: AllauthClientV1AuthSessionDeleteClientEnum;
	xSessionToken?: string;
}

export interface AllauthClientV1AuthSessionGetRequest {
	client: AllauthClientV1AuthSessionGetClientEnum;
	xSessionToken?: string;
}

/**
 * 
 */
export class AuthenticationCurrentSessionApi extends runtime.BaseAPI {

	/**
	 * Logs out the user from the current session.
	 * Logout
	 */
	async allauthClientV1AuthSessionDeleteRaw(requestParameters: AllauthClientV1AuthSessionDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
		if (requestParameters['client'] == null) {
			throw new runtime.RequiredError(
				'client',
				'Required parameter "client" was null or undefined when calling allauthClientV1AuthSessionDelete().'
			);
		}

		const queryParameters: any = {};

		const headerParameters: runtime.HTTPHeaders = {};

		if (requestParameters['xSessionToken'] != null) {
			headerParameters['X-Session-Token'] = String(requestParameters['xSessionToken']);
		}

		const response = await this.request({
			path: `/_allauth/{client}/v1/auth/session`.replace(`{${'client'}}`, encodeURIComponent(String(requestParameters['client']))),
			method: 'DELETE',
			headers: headerParameters,
			query: queryParameters
		}, initOverrides);

		return new runtime.VoidApiResponse(response);
	}

	/**
	 * Logs out the user from the current session.
	 * Logout
	 */
	async allauthClientV1AuthSessionDelete(requestParameters: AllauthClientV1AuthSessionDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
		await this.allauthClientV1AuthSessionDeleteRaw(requestParameters, initOverrides);
	}

	/**
	 * Retrieve information about the authentication status for the current session.
	 * Get authentication status
	 */
	async allauthClientV1AuthSessionGetRaw(requestParameters: AllauthClientV1AuthSessionGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthenticatedResponse>> {
		if (requestParameters['client'] == null) {
			throw new runtime.RequiredError(
				'client',
				'Required parameter "client" was null or undefined when calling allauthClientV1AuthSessionGet().'
			);
		}

		const queryParameters: any = {};

		const headerParameters: runtime.HTTPHeaders = {};

		if (requestParameters['xSessionToken'] != null) {
			headerParameters['X-Session-Token'] = String(requestParameters['xSessionToken']);
		}

		const response = await this.request({
			path: `/_allauth/{client}/v1/auth/session`.replace(`{${'client'}}`, encodeURIComponent(String(requestParameters['client']))),
			method: 'GET',
			headers: headerParameters,
			query: queryParameters
		}, initOverrides);

		return new runtime.JSONApiResponse(response, (jsonValue) => AuthenticatedResponseFromJSON(jsonValue));
	}

	/**
	 * Retrieve information about the authentication status for the current session.
	 * Get authentication status
	 */
	async allauthClientV1AuthSessionGet(requestParameters: AllauthClientV1AuthSessionGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthenticatedResponse> {
		const response = await this.allauthClientV1AuthSessionGetRaw(requestParameters, initOverrides);
		return await response.value();
	}

}

/**
 * @export
 */
export const AllauthClientV1AuthSessionDeleteClientEnum = {
	App: 'app',
	Browser: 'browser'
} as const;
export type AllauthClientV1AuthSessionDeleteClientEnum = typeof AllauthClientV1AuthSessionDeleteClientEnum[keyof typeof AllauthClientV1AuthSessionDeleteClientEnum];
/**
 * @export
 */
export const AllauthClientV1AuthSessionGetClientEnum = {
	App: 'app',
	Browser: 'browser'
} as const;
export type AllauthClientV1AuthSessionGetClientEnum = typeof AllauthClientV1AuthSessionGetClientEnum[keyof typeof AllauthClientV1AuthSessionGetClientEnum];
