/* tslint:disable */
/* eslint-disable */
/**
 * django-allauth: Headless API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: info@allauth.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Authenticated } from './Authenticated';
import { AuthenticatedFromJSON, AuthenticatedToJSON } from './Authenticated';
import type { AuthenticatedMeta } from './AuthenticatedMeta';
import { AuthenticatedMetaFromJSON, AuthenticatedMetaToJSON } from './AuthenticatedMeta';

/**
 * A response indicating reauthentication is required.
 *
 * @export
 * @interface ReauthenticationResponse
 */
export interface ReauthenticationResponse {
	/**
	 *
	 * @type {number}
	 * @memberof ReauthenticationResponse
	 */
	status: ReauthenticationResponseStatusEnum;
	/**
	 *
	 * @type {Authenticated}
	 * @memberof ReauthenticationResponse
	 */
	data: Authenticated;
	/**
	 *
	 * @type {AuthenticatedMeta}
	 * @memberof ReauthenticationResponse
	 */
	meta: AuthenticatedMeta;
}


/**
 * @export
 */
export const ReauthenticationResponseStatusEnum = {
	NUMBER_401: 401
} as const;
export type ReauthenticationResponseStatusEnum = typeof ReauthenticationResponseStatusEnum[keyof typeof ReauthenticationResponseStatusEnum];


/**
 * Check if a given object implements the ReauthenticationResponse interface.
 */
export function instanceOfReauthenticationResponse(value: object): value is ReauthenticationResponse {
	if (!('status' in value) || value['status'] === undefined) return false;
	if (!('data' in value) || value['data'] === undefined) return false;
	if (!('meta' in value) || value['meta'] === undefined) return false;
	return true;
}

export function ReauthenticationResponseFromJSON(json: any): ReauthenticationResponse {
	return ReauthenticationResponseFromJSONTyped(json, false);
}

export function ReauthenticationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReauthenticationResponse {
	if (json == null) {
		return json;
	}
	return {

		'status': json['status'],
		'data': AuthenticatedFromJSON(json['data']),
		'meta': AuthenticatedMetaFromJSON(json['meta'])
	};
}

export function ReauthenticationResponseToJSON(value?: ReauthenticationResponse | null): any {
	if (value == null) {
		return value;
	}
	return {

		'status': value['status'],
		'data': AuthenticatedToJSON(value['data']),
		'meta': AuthenticatedMetaToJSON(value['meta'])
	};
}

