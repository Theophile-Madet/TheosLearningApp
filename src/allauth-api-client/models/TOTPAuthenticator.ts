/* tslint:disable */
/* eslint-disable */

/**
 * django-allauth: Headless API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: info@allauth.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface TOTPAuthenticator
 */
export interface TOTPAuthenticator {
	/**
	 * An epoch based timestamp (trivial to parse using: `new Date(value)*1000`)
	 *
	 * @type {number}
	 * @memberof TOTPAuthenticator
	 */
	lastUsedAt: number;
	/**
	 * An epoch based timestamp (trivial to parse using: `new Date(value)*1000`)
	 *
	 * @type {number}
	 * @memberof TOTPAuthenticator
	 */
	createdAt: number;
	/**
	 *
	 * @type {string}
	 * @memberof TOTPAuthenticator
	 */
	type: TOTPAuthenticatorTypeEnum;
}


/**
 * @export
 */
export const TOTPAuthenticatorTypeEnum = {
	Totp: 'totp'
} as const;
export type TOTPAuthenticatorTypeEnum = typeof TOTPAuthenticatorTypeEnum[keyof typeof TOTPAuthenticatorTypeEnum];


/**
 * Check if a given object implements the TOTPAuthenticator interface.
 */
export function instanceOfTOTPAuthenticator(value: object): value is TOTPAuthenticator {
	if (!('lastUsedAt' in value) || value['lastUsedAt'] === undefined) return false;
	if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
	if (!('type' in value) || value['type'] === undefined) return false;
	return true;
}

export function TOTPAuthenticatorFromJSON(json: any): TOTPAuthenticator {
	return TOTPAuthenticatorFromJSONTyped(json, false);
}

export function TOTPAuthenticatorFromJSONTyped(json: any, ignoreDiscriminator: boolean): TOTPAuthenticator {
	if (json == null) {
		return json;
	}
	return {

		'lastUsedAt': json['last_used_at'],
		'createdAt': json['created_at'],
		'type': json['type']
	};
}

export function TOTPAuthenticatorToJSON(value?: TOTPAuthenticator | null): any {
	if (value == null) {
		return value;
	}
	return {

		'last_used_at': value['lastUsedAt'],
		'created_at': value['createdAt'],
		'type': value['type']
	};
}

