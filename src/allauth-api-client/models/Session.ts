/* tslint:disable */
/* eslint-disable */

/**
 * django-allauth: Headless API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: info@allauth.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface Session
 */
export interface Session {
	/**
	 *
	 * @type {string}
	 * @memberof Session
	 */
	userAgent: string;
	/**
	 *
	 * @type {string}
	 * @memberof Session
	 */
	ip: string;
	/**
	 * An epoch based timestamp (trivial to parse using: `new Date(value)*1000`)
	 *
	 * @type {number}
	 * @memberof Session
	 */
	createdAt: number;
	/**
	 *
	 * @type {boolean}
	 * @memberof Session
	 */
	isCurrent: boolean;
	/**
	 *
	 * @type {number}
	 * @memberof Session
	 */
	id: number;
	/**
	 * An epoch based timestamp (trivial to parse using: `new Date(value)*1000`)
	 *
	 * @type {number}
	 * @memberof Session
	 */
	lastSeenAt?: number;
}

/**
 * Check if a given object implements the Session interface.
 */
export function instanceOfSession(value: object): value is Session {
	if (!('userAgent' in value) || value['userAgent'] === undefined) return false;
	if (!('ip' in value) || value['ip'] === undefined) return false;
	if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
	if (!('isCurrent' in value) || value['isCurrent'] === undefined) return false;
	if (!('id' in value) || value['id'] === undefined) return false;
	return true;
}

export function SessionFromJSON(json: any): Session {
	return SessionFromJSONTyped(json, false);
}

export function SessionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Session {
	if (json == null) {
		return json;
	}
	return {

		'userAgent': json['user_agent'],
		'ip': json['ip'],
		'createdAt': json['created_at'],
		'isCurrent': json['is_current'],
		'id': json['id'],
		'lastSeenAt': json['last_seen_at'] == null ? undefined : json['last_seen_at']
	};
}

export function SessionToJSON(value?: Session | null): any {
	if (value == null) {
		return value;
	}
	return {

		'user_agent': value['userAgent'],
		'ip': value['ip'],
		'created_at': value['createdAt'],
		'is_current': value['isCurrent'],
		'id': value['id'],
		'last_seen_at': value['lastSeenAt']
	};
}

