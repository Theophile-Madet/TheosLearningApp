/* tslint:disable */
/* eslint-disable */
/**
 * django-allauth: Headless API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: info@allauth.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Provider } from './Provider';
import {
	ProviderFromJSON,
	ProviderFromJSONTyped,
	ProviderToJSON
} from './Provider';

/**
 *
 * @export
 * @interface Flow
 */
export interface Flow {
	/**
	 *
	 * @type {string}
	 * @memberof Flow
	 */
	id: FlowIdEnum;
	/**
	 *
	 * @type {Provider}
	 * @memberof Flow
	 */
	provider?: Provider;
	/**
	 *
	 * @type {boolean}
	 * @memberof Flow
	 */
	isPending?: boolean;
}


/**
 * @export
 */
export const FlowIdEnum = {
	VerifyEmail: 'verify_email',
	Login: 'login',
	Signup: 'signup',
	ProviderRedirect: 'provider_redirect',
	ProviderSignup: 'provider_signup',
	ProviderToken: 'provider_token',
	MfaAuthenticate: 'mfa_authenticate',
	Reauthenticate: 'reauthenticate',
	MfaReauthenticate: 'mfa_reauthenticate'
} as const;
export type FlowIdEnum = typeof FlowIdEnum[keyof typeof FlowIdEnum];


/**
 * Check if a given object implements the Flow interface.
 */
export function instanceOfFlow(value: object): value is Flow {
	if (!('id' in value) || value['id'] === undefined) return false;
	return true;
}

export function FlowFromJSON(json: any): Flow {
	return FlowFromJSONTyped(json, false);
}

export function FlowFromJSONTyped(json: any, ignoreDiscriminator: boolean): Flow {
	if (json == null) {
		return json;
	}
	return {

		'id': json['id'],
		'provider': json['provider'] == null ? undefined : ProviderFromJSON(json['provider']),
		'isPending': json['is_pending'] == null ? undefined : json['is_pending']
	};
}

export function FlowToJSON(value?: Flow | null): any {
	if (value == null) {
		return value;
	}
	return {

		'id': value['id'],
		'provider': ProviderToJSON(value['provider']),
		'is_pending': value['isPending']
	};
}

