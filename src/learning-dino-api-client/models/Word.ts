/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { TypeEnum } from './TypeEnum';
import { TypeEnumFromJSON, TypeEnumToJSON } from './TypeEnum';

/**
 *
 * @export
 * @interface Word
 */
export interface Word {
	/**
	 *
	 * @type {number}
	 * @memberof Word
	 */
	readonly id: number;
	/**
	 *
	 * @type {string}
	 * @memberof Word
	 */
	word: string;
	/**
	 *
	 * @type {TypeEnum}
	 * @memberof Word
	 */
	type: TypeEnum;
	/**
	 *
	 * @type {string}
	 * @memberof Word
	 */
	gender?: string;
	/**
	 *
	 * @type {number}
	 * @memberof Word
	 */
	usageFrequency: number;
}

/**
 * Check if a given object implements the Word interface.
 */
export function instanceOfWord(value: object): value is Word {
	if (!('id' in value) || value['id'] === undefined) return false;
	if (!('word' in value) || value['word'] === undefined) return false;
	if (!('type' in value) || value['type'] === undefined) return false;
	if (!('usageFrequency' in value) || value['usageFrequency'] === undefined) return false;
	return true;
}

export function WordFromJSON(json: any): Word {
	return WordFromJSONTyped(json, false);
}

export function WordFromJSONTyped(json: any, ignoreDiscriminator: boolean): Word {
	if (json == null) {
		return json;
	}
	return {

		'id': json['id'],
		'word': json['word'],
		'type': TypeEnumFromJSON(json['type']),
		'gender': json['gender'] == null ? undefined : json['gender'],
		'usageFrequency': json['usage_frequency']
	};
}

export function WordToJSON(value?: Omit<Word, 'id'> | null): any {
	if (value == null) {
		return value;
	}
	return {

		'word': value['word'],
		'type': TypeEnumToJSON(value['type']),
		'gender': value['gender'],
		'usage_frequency': value['usageFrequency']
	};
}

